{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","setHasError","useState","Math","random","toFixed","slice","id","errorMaseg","setErrorMaseg","pattern","htmlFor","type","classNames","event","target","onBlur","includes","test","NewMovie","onAdd","count","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasError","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96580659.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  setHasError: (newValue: boolean) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => { },\n  setHasError,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [errorMaseg, setErrorMaseg] = useState('');\n\n  // eslint-disable-next-line\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const verify = () => {\n    if (required && !value) {\n      setErrorMaseg(`${label} is required`);\n      setHasError(true);\n\n      return;\n    }\n\n    if (label.includes('URL') && !pattern.test(value)) {\n      setErrorMaseg(`${label} is not valid URL`);\n      setHasError(true);\n    }\n  };\n\n  const change = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setErrorMaseg('');\n    onChange(event.target.value);\n    setHasError(false);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': errorMaseg,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={change}\n          onBlur={verify}\n        />\n      </div>\n\n      {errorMaseg && (\n        <p className=\"help is-danger\">{errorMaseg}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [hasError, setHasError] = useState(true);\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title || !imgUrl || !imdbUrl || !imdbId) {\n      return;\n    }\n\n    const movie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(movie);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={onSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n        setHasError={setHasError}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n        setHasError={setHasError}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n        setHasError={setHasError}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n        setHasError={setHasError}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n        setHasError={setHasError}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={hasError}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={(movie) => setMovies([...movies, movie])}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}